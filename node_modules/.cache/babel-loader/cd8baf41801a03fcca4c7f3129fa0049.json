{"remainingRequest":"D:\\Work\\jinchukou\\node_modules\\babel-loader\\lib\\index.js!D:\\Work\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Work\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\jinchukou\\src\\components\\china\\mapChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Work\\jinchukou\\src\\components\\china\\mapChart.vue","mtime":1599707240386},{"path":"D:\\Work\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\jinchukou\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Work\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"mapChart\",\n  props: [\"chartData\", \"mapPopData\"],\n  mounted: function mounted() {\n    this.initMap(this.chartData, this.mapPopData); // this.rollMap(this.chartData);\n  },\n  data: function data() {\n    return {\n      mapIndex: 2,\n      myEcharts: undefined,\n      // rollMapInterval: undefined,\n      l: this\n    };\n  },\n  computed: {},\n  methods: {\n    initMap: function initMap(chartData, mapPopData) {\n      // eslint-disable-next-line no-unused-vars\n      var that = this;\n      var geoCoordMap = {\n        上海: [119.1803, 31.2891],\n        福建: [119.4543, 25.9222],\n        重庆: [108.384366, 30.439702],\n        北京: [116.4551, 40.2539],\n        辽宁: [123.1238, 42.1216],\n        河北: [114.4995, 38.1006],\n        天津: [117.4219, 39.4189],\n        山西: [112.3352, 37.9413],\n        陕西: [109.1162, 34.2004],\n        甘肃: [103.5901, 36.3043],\n        宁夏: [106.3586, 38.1775],\n        青海: [101.4038, 36.8207],\n        新疆: [87.9236, 43.5883],\n        西藏: [91.11, 29.97],\n        四川: [103.9526, 30.7617],\n        吉林: [125.8154, 44.2584],\n        山东: [117.1582, 36.8701],\n        河南: [113.4668, 34.6234],\n        江苏: [118.8062, 31.9208],\n        安徽: [117.29, 32.0581],\n        湖北: [114.3896, 30.6628],\n        浙江: [119.5313, 29.8773],\n        内蒙古: [110.3467, 41.4899],\n        江西: [116.0046, 28.6633],\n        湖南: [113.0823, 28.2568],\n        贵州: [106.6992, 26.7682],\n        云南: [102.9199, 25.4663],\n        广东: [113.12244, 23.009505],\n        广西: [108.479, 23.1152],\n        海南: [110.3893, 19.8516],\n        黑龙江: [127.9688, 45.368],\n        中国台湾: [121.4648, 25.563]\n      };\n      var colorData = [{\n        name: \"北京\",\n        value: 199\n      }, {\n        name: \"天津\",\n        value: 42\n      }, {\n        name: \"河北\",\n        value: 102\n      }, {\n        name: \"山西\",\n        value: 81\n      }, {\n        name: \"内蒙古\",\n        value: 47\n      }, {\n        name: \"辽宁\",\n        value: 67\n      }, {\n        name: \"吉林\",\n        value: 82\n      }, {\n        name: \"黑龙江\",\n        value: 123\n      }, {\n        name: \"上海\",\n        value: 24\n      }, {\n        name: \"江苏\",\n        value: 92\n      }, {\n        name: \"浙江\",\n        value: 114\n      }, {\n        name: \"安徽\",\n        value: 139\n      }, {\n        name: \"福建\",\n        value: 116\n      }, {\n        name: \"江西\",\n        value: 91\n      }, {\n        name: \"山东\",\n        value: 119\n      }, {\n        name: \"河南\",\n        value: 137\n      }, {\n        name: \"湖北\",\n        value: 116\n      }, {\n        name: \"湖南\",\n        value: 114\n      }, {\n        name: \"重庆\",\n        value: 91\n      }, {\n        name: \"四川\",\n        value: 125\n      }, {\n        name: \"贵州\",\n        value: 62\n      }, {\n        name: \"云南\",\n        value: 83\n      }, {\n        name: \"西藏\",\n        value: 9\n      }, {\n        name: \"陕西\",\n        value: 80\n      }, {\n        name: \"甘肃\",\n        value: 56\n      }, {\n        name: \"青海\",\n        value: 10\n      }, {\n        name: \"宁夏\",\n        value: 18\n      }, {\n        name: \"新疆\",\n        value: 18\n      }, {\n        name: \"广东\",\n        value: 183\n      }, {\n        name: \"香港\",\n        value: 203\n      }, {\n        name: \"澳门\",\n        value: 0\n      }, {\n        name: \"广西\",\n        value: 59\n      }, {\n        name: \"海南\",\n        value: 14\n      }, {\n        name: \"中国台湾\",\n        value: 0\n      }, {\n        name: \"南海诸岛\",\n        value: 16\n      }];\n\n      var convertData = function convertData(data) {\n        var res = [];\n\n        for (var i = 0; i < data.length; i++) {\n          var geoCoord = geoCoordMap[data[i].name];\n\n          if (geoCoord) {\n            res.push({\n              name: data[i].name,\n              value: geoCoord.concat(data[i].value)\n            });\n          }\n        }\n\n        return res;\n      };\n\n      this.myEcharts = this.$echarts.init(document.getElementById(\"middleMap\"));\n      this.myEcharts.setOption({\n        legend: {\n          show: false\n        },\n        tooltip: {\n          show: true\n        },\n        visualMap: {\n          show: true,\n          type: \"piecewise\",\n          // min: 0,\n          // max: 200,\n          left: \"18%\",\n          top: \"70%\",\n          calculable: true,\n          seriesIndex: [1],\n          pieces: [{\n            gt: 0,\n            lte: 40,\n            label: \"10 ～ 40亿\"\n          }, // (10, 200]\n          {\n            gt: 40,\n            lte: 80,\n            label: \"40 ～ 80亿\"\n          }, // (200, 300]\n          {\n            gt: 80,\n            lte: 120,\n            label: \"80 ～ 120亿\"\n          }, // (310, 1000]\n          {\n            gt: 120,\n            lte: 200,\n            label: \"120 ～ 200亿\"\n          }, // (900, 1500]\n          {\n            gt: 200,\n            label: \"> 200亿\"\n          } // (1500, Infinity]\n          ],\n          inRange: {\n            color: [\"rgba(0,101,212,1)\", \"rgba(199,248,255,1)\"] // 蓝绿 1701FF\n            // color: [\"#0E3973\", \"#C3F8FF\",'#F5F5F5'] // 蓝绿\n            // color: [\n            //   \"#a15695\",//紫红\n            //   \"#4575b4\",//蓝\n            //   \"#74add1\",\n            //   \"#abd9e9\",//内蒙蓝2222\n            //   \"#e0f3f8\",\n            //   \"#ffffbf\",//黄白\n            //   \"#fee090\",\n            //   \"#fdae61\",\n            //   \"#c8f881\",//橘色\n            //   \"#d73027\",\n            //   \"#e0f3f8\",\n            // ],\n\n          },\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.7)\",\n            // fontSize: '0.73vw'\n            fontSize: 12\n          },\n          itemGap: 6,\n          itemSymbol: 10\n        },\n        geo: {\n          map: \"china\",\n          aspectScale: 0.75,\n          label: {\n            emphasis: {\n              show: false\n            }\n          },\n          regions: [{\n            name: \"南海诸岛\",\n            value: 0,\n            itemStyle: {\n              normal: {\n                opacity: 0,\n                label: {\n                  show: false\n                }\n              }\n            }\n          }],\n          itemStyle: {\n            normal: {\n              borderColor: \"rgba(147, 235, 248, 1)\",\n              borderWidth: 1,\n              areaColor: {\n                type: \"radial\",\n                x: 0.5,\n                y: 0.5,\n                r: 0.8,\n                colorStops: [{\n                  offset: 0,\n                  color: \"rgba(147, 235, 248, 0)\" // 0% 处的颜色\n\n                }, {\n                  offset: 1,\n                  color: \"rgba(147, 235, 248, .2)\" // 100% 处的颜色\n\n                }],\n                globalCoord: false // 缺省为 false\n\n              },\n              shadowColor: \"rgba(128, 217, 248, 1)\",\n              // shadowColor: 'rgba(255, 255, 255, 1)',\n              shadowOffsetX: -2,\n              shadowOffsetY: 2,\n              shadowBlur: 10\n            },\n            emphasis: {\n              areaColor: \"#389BB7\",\n              borderWidth: 0\n            }\n          },\n          z: 2\n        },\n        series: [{\n          name: \"散点\",\n          type: \"scatter\",\n          coordinateSystem: \"geo\",\n          data: convertData(colorData),\n          symbolSize: 0,\n          zlevel: 0,\n          label: {\n            normal: {\n              formatter: \"{b}\",\n              position: \"right\",\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: \"#fff\"\n            }\n          }\n        }, {\n          type: \"map\",\n          map: \"china\",\n          tooltip: {\n            show: true,\n            formatter: function formatter(params) {\n              // console.log(params);\n              if (params.data.name === \"中国台湾\" || params.data.name === \"香港\" || params.data.name === \"澳门\") {\n                return \"<span style='color: rgba(255,255,255,1);font-family: PingFang SC;font-weight: medium;font-size: 0.8333vw;line-height: normal;letter-spacing: 0px;text-align: left;'>\" + params.data.name + \"</span>\";\n              } else {\n                return \"<span style='color: rgba(255,255,255,1);font-family: PingFang SC;font-weight: medium;font-size: 0.8333vw;line-height: normal;letter-spacing: 0px;text-align: left;'>\" + params.data.name + \"</span></br>\" + \"<span style='opacity: 0.7200000286102295;color: rgba(255,255,255,1);font-family: PingFang SC;font-weight: regular;font-size: 0.8333vw;line-height: normal;letter-spacing: 0px;text-align: left;'>贷款余额</span>：\" + \"</br><span style='color: rgba(255,146,41,1);font-family: Microsoft YaHei;font-weight: bold;font-size: 0.9375vw;line-height: normal;letter-spacing: 0px;text-align: left;'>\" + that.thousandFormat(params.value, 2) + \" 亿</span>\";\n              } // return (\n              //   \"{fline|\" + \" \" + params.name + \" \" + \"重点关注\" + \"}\"\n              // );\n\n            },\n            distance: 20,\n            backgroundColor: \"rgba(4,15,39,0.7)\",\n            // borderColor: \"rgba(0,191,255,.9)\",\n            borderWidth: 2,\n            padding: [8, 12],\n            borderRadius: 3,\n            // lineHeight: 24,\n            lineHeight: 20,\n            verticalAlign: \"middle\",\n            color: \"#fff\",\n            z: 11\n          },\n          // label: {\n          //   emphasis: {\n          //     show: false,\n          //     color: \"#fff\"\n          //   }\n          // },\n          top: \"9.5%\",\n          // left: \"12.5%\",\n          aspectScale: 0.75,\n          symbolSize: 0,\n          roam: false,\n          showLegendSymbol: false,\n          itemStyle: {\n            normal: {\n              borderColor: \"#2cb3dd\",\n              borderWidth: 0.8,\n              areaColor: {\n                type: \"linear-gradient\",\n                x: 1000,\n                y: 600,\n                x2: 1000,\n                y2: 0,\n                colorStops: [{\n                  offset: 0,\n                  color: \"rgba(14,57,115,1)\" // 0% 处的颜色\n\n                }, {\n                  offset: 1,\n                  color: \"rgba(14,57,115,1)\" // 50% 处的颜色\n\n                }],\n                global: true // 缺省为 false\n\n              }\n            },\n            emphasis: {\n              show: false,\n              areaColor: \"rgba(14,57,115,1)\"\n            }\n          },\n          label: {\n            normal: {\n              show: false\n            },\n            emphasis: {\n              show: false,\n              textStyle: {\n                color: \"#fff\"\n              }\n            }\n          },\n          // roam: false,\n          // itemStyle: {\n          //   normal: {\n          //     // areaColor: \"rgba(0, 187, 255, .3)\",\n          //     // borderColor: \"#00FFFF\",\n          //     areaColor: \"rgba(0, 187, 255, .0)\",\n          //     borderColor: \"rgba(0, 187, 255, .0)\",\n          //     borderWidth: 1\n          //   },\n          //   emphasis: {\n          //     // areaColor: \"#00FFFF\"\n          //     areaColor: \"rgba(0, 187, 255, .0)\"\n          //   }\n          // },\n          animation: false,\n          zlevel: 1,\n          data: colorData\n        }, // {\n        //   type: \"effectScatter\",\n        //   coordinateSystem: \"geo\",\n        //   zlevel: 8,\n        //   data:\n        //     chartData && chartData.length > 0\n        //       ? chartData\n        //       : [\n        //           {\n        //             name: \"王**\",\n        //             age: \"28岁\",\n        //             sex: \"男\",\n        //             type: \"授信申请\",\n        //             sum: \"3000000\",\n        //             value: [116.4551, 40.2539, 48]\n        //           },\n        //           {\n        //             name: \"王**\",\n        //             age: \"25岁\",\n        //             sex: \"女\",\n        //             type: \"授信申请\",\n        //             sum: \"7000000\",\n        //             value: [103.9526, 30.7617, 48]\n        //           }\n        //         ],\n        //   // symbolSize: function(value, params) {\n        //   //   const { sum } = params.data;\n        //   //   let num = parseInt(sum)\n        //   //   var max = Math.max.apply(\n        //   //     null,\n        //   //     chartData.map(item => item.sum)\n        //   //   );\n        //   //   let size = (32 / max) * num;\n        //   //   let result = size > 5 ? size : 5;\n        //   //   return result;\n        //   // },\n        //   showEffectOn: \"render\",\n        //   // 涟漪的设置\n        //   // rippleEffect: {\n        //   //   color: \"#7FFFAA\",\n        //   //   scale: 4,\n        //   //   brushType: \"stroke\"\n        //   // },\n        //   itemStyle: {\n        //     normal: {\n        //       color: \"#F5B523\",\n        //       shadowBlur: 2\n        //     }\n        //   }\n        // },\n        {\n          type: \"effectScatter\",\n          coordinateSystem: \"geo\",\n          zlevel: 10,\n          data: mapPopData && mapPopData.length > 0 ? mapPopData : [{\n            name: \"北京分行\",\n            age: \"28岁\",\n            sex: \"男\",\n            type: \"授信申请\",\n            sum: \"300000\",\n            value: [116.4551, 40.2539, 48]\n          }, {\n            name: \"四川\",\n            age: \"25岁\",\n            sex: \"女\",\n            type: \"授信申请\",\n            sum: \"7000000\",\n            value: [103.9526, 30.7617, 48]\n          }],\n          symbolSize: 1,\n          // showEffectOn: \"render\",\n          // 涟漪的设置\n          // rippleEffect: {\n          //   color: \"#7FFFAA\",\n          //   scale: 4,\n          //   brushType: \"stroke\"\n          // },\n          // 标签\n          label: {\n            normal: {\n              show: false,\n              formatter: function formatter(params) {\n                // console.log(params);\n                return params.data.name + \"\\n\\n\" + \"{fline|\" + \"交易金额：\" + \"}\" + \"{fnum|\" + that.thousandFormat(params.data.sum, 2) + \"}\"; // return (\n                //   \"{fline|\" + \" \" + params.data.name + \" \" + \"重点关注\" + \"}\"\n                // );\n              },\n              position: [0, -90],\n              distance: 40,\n              backgroundColor: {\n                image: require(\"@/assets/images/material/exports/group-9.png\")\n              },\n              // borderColor: \"rgba(0,191,255,.9)\",\n              borderWidth: 2,\n              padding: [32, 48],\n              borderRadius: 3,\n              lineHeight: 24,\n              verticalAlign: \"middle\",\n              color: \"#fff\",\n              z: 11,\n              textStyle: {\n                fontSize: 20\n              },\n              rich: {\n                fnum: {\n                  fontSize: 20,\n                  color: \"#FF9029\"\n                },\n                fline: {\n                  fontSize: 20,\n                  color: \"rgba(255, 255, 255, .6)\"\n                }\n              }\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: \"#F5B523\",\n              shadowBlur: 2\n            }\n          }\n        }, {\n          type: \"lines\",\n          zlevel: 11,\n          effect: {\n            show: true,\n            period: 5,\n            color: \"rgba(127,255,170, 1)\"\n          },\n          lineStyle: {\n            normal: {\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: \"rgba(127,255,170, 1)\"\n              }, {\n                offset: 1,\n                color: \"rgba(127,255,170, 0)\"\n              }], false),\n              width: 2,\n              opacity: 0.5,\n              curveness: 0\n            }\n          } // data: chartData\n          //   ? chartData.map(item => {\n          //       return {\n          //         fromName: 1,\n          //         toName: 1,\n          //         coords: [\n          //           [Number(item.value[0]), Number(item.value[1])],\n          //           [Number(item.value[0]), Number(item.value[1]) + 3]\n          //         ]\n          //       };\n          //     })\n          //   : []\n          // data: Object.keys(geoCoordMap).map(item => {\n          //   return {\n          //     fromName: 1,\n          //     toName: 1,\n          //     coords: [\n          //       geoCoordMap[item],\n          //       [geoCoordMap[item][0], geoCoordMap[item][1] + 3]\n          //     ]\n          //   };\n          // })\n          // data: [\n          //   {\n          //     fromName: 1,\n          //     toName: 1,\n          //     coords: [\n          //       [116.24, 39.55],\n          //       [116.24, 42.55]\n          //     ]\n          //   }\n          // ]\n\n        }]\n      });\n    },\n    formattedNumber: function formattedNumber(num) {\n      num = (num || 0).toString();\n      var result = \"\";\n\n      while (num.length > 3) {\n        result = \",\" + num.slice(-3) + result;\n        num = num.slice(0, num.length - 3);\n      }\n\n      if (num) {\n        result = num + result;\n      }\n\n      return result;\n    },\n    // 格式化千分位\n    thousandFormat: function thousandFormat(value, fixed) {\n      fixed = fixed !== undefined ? fixed : 2;\n\n      if (value === null || value === undefined || isNaN(parseFloat(value))) {\n        return;\n      } // 将数字进行千分位格式化\n\n\n      function toThousands(num) {\n        num = (num || 0).toString();\n        var parts = num.split(\".\");\n        var bigZeroPart = parts[0];\n        var result = \"\";\n\n        while (bigZeroPart.length > 3) {\n          result = \",\" + bigZeroPart.slice(-3) + result;\n          bigZeroPart = bigZeroPart.slice(0, bigZeroPart.length - 3);\n        }\n\n        if (bigZeroPart) {\n          result = bigZeroPart + result;\n        }\n\n        if (parts.length > 1) {\n          result += \".\" + parts[1].toString();\n        }\n\n        return result;\n      }\n\n      value = parseFloat(value).toFixed(fixed);\n      value = toThousands(value);\n      return value;\n    } // rollMap() {\n    //   var _that = this;\n    //   // if (mapInterval) clearInterval(mapInterval);\n    //   this.rollMapInterval = setInterval(\n    //     () => {\n    //       if (_that.mapIndex > this.chartData.length - 1) {\n    //         _that.mapIndex = 0;\n    //       }\n    //       _that.initMap(\n    //         _that.chartData.slice(_that.mapIndex, _that.mapIndex + 1)\n    //       );\n    //       this.$nextTick(() => {\n    //         _that.mapIndex += 2;\n    //       });\n    //     },\n    //     5000,\n    //     _that\n    //   );\n    // }\n\n  },\n  beforeDestroy: function beforeDestroy() {// clearInterval(this.rollMapInterval);\n  },\n  components: {},\n  watch: {\n    chartData: function chartData(newVal) {\n      this.initMap(newVal, this.mapPopData);\n    },\n    mapPopData: function mapPopData(newVal) {\n      this.initMap(this.chartData, newVal);\n    }\n  }\n};",{"version":3,"sources":["mapChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"map-charts\">\n    <!-- p2 -->\n    <div id=\"middleMap\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"mapChart\",\n  props: [\"chartData\", \"mapPopData\"],\n  mounted() {\n    this.initMap(this.chartData, this.mapPopData);\n    // this.rollMap(this.chartData);\n  },\n  data() {\n    return {\n      mapIndex: 2,\n      myEcharts: undefined,\n      // rollMapInterval: undefined,\n      l: this,\n    };\n  },\n  computed: {},\n  methods: {\n    initMap(chartData, mapPopData) {\n      // eslint-disable-next-line no-unused-vars\n      var that = this;\n      var geoCoordMap = {\n        上海: [119.1803, 31.2891],\n        福建: [119.4543, 25.9222],\n        重庆: [108.384366, 30.439702],\n        北京: [116.4551, 40.2539],\n        辽宁: [123.1238, 42.1216],\n        河北: [114.4995, 38.1006],\n        天津: [117.4219, 39.4189],\n        山西: [112.3352, 37.9413],\n        陕西: [109.1162, 34.2004],\n        甘肃: [103.5901, 36.3043],\n        宁夏: [106.3586, 38.1775],\n        青海: [101.4038, 36.8207],\n        新疆: [87.9236, 43.5883],\n        西藏: [91.11, 29.97],\n        四川: [103.9526, 30.7617],\n        吉林: [125.8154, 44.2584],\n        山东: [117.1582, 36.8701],\n        河南: [113.4668, 34.6234],\n        江苏: [118.8062, 31.9208],\n        安徽: [117.29, 32.0581],\n        湖北: [114.3896, 30.6628],\n        浙江: [119.5313, 29.8773],\n        内蒙古: [110.3467, 41.4899],\n        江西: [116.0046, 28.6633],\n        湖南: [113.0823, 28.2568],\n        贵州: [106.6992, 26.7682],\n        云南: [102.9199, 25.4663],\n        广东: [113.12244, 23.009505],\n        广西: [108.479, 23.1152],\n        海南: [110.3893, 19.8516],\n        黑龙江: [127.9688, 45.368],\n        中国台湾: [121.4648, 25.563],\n      };\n      var colorData = [\n        { name: \"北京\", value: 199 },\n        { name: \"天津\", value: 42 },\n        { name: \"河北\", value: 102 },\n        { name: \"山西\", value: 81 },\n        { name: \"内蒙古\", value: 47 },\n        { name: \"辽宁\", value: 67 },\n        { name: \"吉林\", value: 82 },\n        { name: \"黑龙江\", value: 123 },\n        { name: \"上海\", value: 24 },\n        { name: \"江苏\", value: 92 },\n        { name: \"浙江\", value: 114 },\n        { name: \"安徽\", value: 139 },\n        { name: \"福建\", value: 116 },\n        { name: \"江西\", value: 91 },\n        { name: \"山东\", value: 119 },\n        { name: \"河南\", value: 137 },\n        { name: \"湖北\", value: 116 },\n        { name: \"湖南\", value: 114 },\n        { name: \"重庆\", value: 91 },\n        { name: \"四川\", value: 125 },\n        { name: \"贵州\", value: 62 },\n        { name: \"云南\", value: 83 },\n        { name: \"西藏\", value: 9 },\n        { name: \"陕西\", value: 80 },\n        { name: \"甘肃\", value: 56 },\n        { name: \"青海\", value: 10 },\n        { name: \"宁夏\", value: 18 },\n        { name: \"新疆\", value: 18 },\n        { name: \"广东\", value: 183 },\n        { name: \"香港\", value: 203 },\n        { name: \"澳门\", value: 0 },\n        { name: \"广西\", value: 59 },\n        { name: \"海南\", value: 14 },\n        { name: \"中国台湾\", value: 0 },\n        { name: \"南海诸岛\", value: 16 },\n      ];\n\n      var convertData = function (data) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n          var geoCoord = geoCoordMap[data[i].name];\n          if (geoCoord) {\n            res.push({\n              name: data[i].name,\n              value: geoCoord.concat(data[i].value),\n            });\n          }\n        }\n        return res;\n      };\n      this.myEcharts = this.$echarts.init(document.getElementById(\"middleMap\"));\n      this.myEcharts.setOption({\n        legend: {\n          show: false,\n        },\n        tooltip: {\n          show: true,\n        },\n        visualMap: {\n          show: true,\n          type: \"piecewise\",\n          // min: 0,\n          // max: 200,\n          left: \"18%\",\n          top: \"70%\",\n          calculable: true,\n          seriesIndex: [1],\n          pieces: [\n            { gt: 0, lte: 40, label: \"10 ～ 40亿\" }, // (10, 200]\n            { gt: 40, lte: 80, label: \"40 ～ 80亿\" }, // (200, 300]\n            { gt: 80, lte: 120, label: \"80 ～ 120亿\" }, // (310, 1000]\n            { gt: 120, lte: 200, label: \"120 ～ 200亿\" }, // (900, 1500]\n            { gt: 200, label: \"> 200亿\" }, // (1500, Infinity]\n          ],\n          inRange: {\n            color: [\"rgba(0,101,212,1)\", \"rgba(199,248,255,1)\"] // 蓝绿 1701FF\n            // color: [\"#0E3973\", \"#C3F8FF\",'#F5F5F5'] // 蓝绿\n            // color: [\n            //   \"#a15695\",//紫红\n            //   \"#4575b4\",//蓝\n            //   \"#74add1\",\n            //   \"#abd9e9\",//内蒙蓝2222\n            //   \"#e0f3f8\",\n            //   \"#ffffbf\",//黄白\n            //   \"#fee090\",\n            //   \"#fdae61\",\n            //   \"#c8f881\",//橘色\n            //   \"#d73027\",\n            //   \"#e0f3f8\",\n\n            // ],\n          },\n\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.7)\",\n            // fontSize: '0.73vw'\n            fontSize: 12,\n          },\n          itemGap: 6,\n          itemSymbol: 10,\n        },\n        geo: {\n          map: \"china\",\n          aspectScale: 0.75,\n          label: {\n            emphasis: {\n              show: false,\n            },\n          },\n          regions: [\n            {\n              name: \"南海诸岛\",\n              value: 0,\n              itemStyle: {\n                normal: {\n                  opacity: 0,\n                  label: {\n                    show: false,\n                  },\n                },\n              },\n            },\n          ],\n          itemStyle: {\n            normal: {\n              borderColor: \"rgba(147, 235, 248, 1)\",\n              borderWidth: 1,\n              areaColor: {\n                type: \"radial\",\n                x: 0.5,\n                y: 0.5,\n                r: 0.8,\n                colorStops: [\n                  {\n                    offset: 0,\n                    color: \"rgba(147, 235, 248, 0)\", // 0% 处的颜色\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgba(147, 235, 248, .2)\", // 100% 处的颜色\n                  },\n                ],\n                globalCoord: false, // 缺省为 false\n              },\n              shadowColor: \"rgba(128, 217, 248, 1)\",\n              // shadowColor: 'rgba(255, 255, 255, 1)',\n              shadowOffsetX: -2,\n              shadowOffsetY: 2,\n              shadowBlur: 10,\n            },\n            emphasis: {\n              areaColor: \"#389BB7\",\n              borderWidth: 0,\n            },\n          },\n          z: 2,\n        },\n        series: [\n          {\n            name: \"散点\",\n            type: \"scatter\",\n            coordinateSystem: \"geo\",\n            data: convertData(colorData),\n            symbolSize: 0,\n            zlevel: 0,\n            label: {\n              normal: {\n                formatter: \"{b}\",\n                position: \"right\",\n                show: true,\n              },\n              emphasis: {\n                show: true,\n              },\n            },\n            itemStyle: {\n              normal: {\n                color: \"#fff\",\n              },\n            },\n          },\n          {\n            type: \"map\",\n            map: \"china\",\n            tooltip: {\n              show: true,\n              formatter: function (params) {\n                // console.log(params);\n                if (\n                  params.data.name === \"中国台湾\" ||\n                  params.data.name === \"香港\" ||\n                  params.data.name === \"澳门\"\n                ) {\n                  return (\n                    \"<span style='color: rgba(255,255,255,1);font-family: PingFang SC;font-weight: medium;font-size: 0.8333vw;line-height: normal;letter-spacing: 0px;text-align: left;'>\" +\n                    params.data.name +\n                    \"</span>\"\n                  );\n                } else {\n                  return (\n                    \"<span style='color: rgba(255,255,255,1);font-family: PingFang SC;font-weight: medium;font-size: 0.8333vw;line-height: normal;letter-spacing: 0px;text-align: left;'>\" +\n                    params.data.name +\n                    \"</span></br>\" +\n                    \"<span style='opacity: 0.7200000286102295;color: rgba(255,255,255,1);font-family: PingFang SC;font-weight: regular;font-size: 0.8333vw;line-height: normal;letter-spacing: 0px;text-align: left;'>贷款余额</span>：\" +\n                    \"</br><span style='color: rgba(255,146,41,1);font-family: Microsoft YaHei;font-weight: bold;font-size: 0.9375vw;line-height: normal;letter-spacing: 0px;text-align: left;'>\" +\n                    that.thousandFormat(params.value, 2) +\n                    \" 亿</span>\"\n                  );\n                }\n                // return (\n                //   \"{fline|\" + \" \" + params.name + \" \" + \"重点关注\" + \"}\"\n                // );\n              },\n              distance: 20,\n              backgroundColor: \"rgba(4,15,39,0.7)\",\n              // borderColor: \"rgba(0,191,255,.9)\",\n              borderWidth: 2,\n              padding: [8, 12],\n              borderRadius: 3,\n              // lineHeight: 24,\n              lineHeight: 20,\n              verticalAlign: \"middle\",\n              color: \"#fff\",\n              z: 11,\n            },\n            // label: {\n            //   emphasis: {\n            //     show: false,\n            //     color: \"#fff\"\n            //   }\n            // },\n            top: \"9.5%\",\n            // left: \"12.5%\",\n            aspectScale: 0.75,\n            symbolSize: 0,\n            roam: false,\n            showLegendSymbol: false,\n            itemStyle: {\n              normal: {\n                borderColor: \"#2cb3dd\",\n                borderWidth: 0.8,\n                areaColor: {\n                  type: \"linear-gradient\",\n                  x: 1000,\n                  y: 600,\n                  x2: 1000,\n                  y2: 0,\n                  colorStops: [\n                    {\n                      offset: 0,\n                      color: \"rgba(14,57,115,1)\", // 0% 处的颜色\n                    },\n                    {\n                      offset: 1,\n                      color: \"rgba(14,57,115,1)\", // 50% 处的颜色\n                    },\n                  ],\n                  global: true, // 缺省为 false\n                },\n              },\n              emphasis: {\n                show: false,\n                areaColor: \"rgba(14,57,115,1)\",\n              },\n            },\n            label: {\n              normal: {\n                show: false,\n              },\n              emphasis: {\n                show: false,\n                textStyle: {\n                  color: \"#fff\",\n                },\n              },\n            },\n            // roam: false,\n            // itemStyle: {\n            //   normal: {\n            //     // areaColor: \"rgba(0, 187, 255, .3)\",\n            //     // borderColor: \"#00FFFF\",\n            //     areaColor: \"rgba(0, 187, 255, .0)\",\n            //     borderColor: \"rgba(0, 187, 255, .0)\",\n            //     borderWidth: 1\n            //   },\n            //   emphasis: {\n            //     // areaColor: \"#00FFFF\"\n            //     areaColor: \"rgba(0, 187, 255, .0)\"\n            //   }\n            // },\n            animation: false,\n            zlevel: 1,\n            data: colorData,\n          },\n          // {\n          //   type: \"effectScatter\",\n          //   coordinateSystem: \"geo\",\n          //   zlevel: 8,\n          //   data:\n          //     chartData && chartData.length > 0\n          //       ? chartData\n          //       : [\n          //           {\n          //             name: \"王**\",\n          //             age: \"28岁\",\n          //             sex: \"男\",\n          //             type: \"授信申请\",\n          //             sum: \"3000000\",\n          //             value: [116.4551, 40.2539, 48]\n          //           },\n          //           {\n          //             name: \"王**\",\n          //             age: \"25岁\",\n          //             sex: \"女\",\n          //             type: \"授信申请\",\n          //             sum: \"7000000\",\n          //             value: [103.9526, 30.7617, 48]\n          //           }\n          //         ],\n          //   // symbolSize: function(value, params) {\n          //   //   const { sum } = params.data;\n          //   //   let num = parseInt(sum)\n          //   //   var max = Math.max.apply(\n          //   //     null,\n          //   //     chartData.map(item => item.sum)\n          //   //   );\n          //   //   let size = (32 / max) * num;\n          //   //   let result = size > 5 ? size : 5;\n          //   //   return result;\n          //   // },\n          //   showEffectOn: \"render\",\n\n          //   // 涟漪的设置\n          //   // rippleEffect: {\n          //   //   color: \"#7FFFAA\",\n          //   //   scale: 4,\n          //   //   brushType: \"stroke\"\n          //   // },\n          //   itemStyle: {\n          //     normal: {\n          //       color: \"#F5B523\",\n          //       shadowBlur: 2\n          //     }\n          //   }\n          // },\n          {\n            type: \"effectScatter\",\n            coordinateSystem: \"geo\",\n            zlevel: 10,\n\n            data:\n              mapPopData && mapPopData.length > 0\n                ? mapPopData\n                : [\n                    {\n                      name: \"北京分行\",\n                      age: \"28岁\",\n                      sex: \"男\",\n                      type: \"授信申请\",\n                      sum: \"300000\",\n                      value: [116.4551, 40.2539, 48],\n                    },\n                    {\n                      name: \"四川\",\n                      age: \"25岁\",\n                      sex: \"女\",\n                      type: \"授信申请\",\n                      sum: \"7000000\",\n                      value: [103.9526, 30.7617, 48],\n                    },\n                  ],\n            symbolSize: 1,\n            // showEffectOn: \"render\",\n\n            // 涟漪的设置\n            // rippleEffect: {\n            //   color: \"#7FFFAA\",\n            //   scale: 4,\n            //   brushType: \"stroke\"\n            // },\n\n            // 标签\n            label: {\n              normal: {\n                show: false,\n                formatter: function (params) {\n                  // console.log(params);\n                  return (\n                    params.data.name +\n                    \"\\n\\n\" +\n                    \"{fline|\" +\n                    \"交易金额：\" +\n                    \"}\" +\n                    \"{fnum|\" +\n                    that.thousandFormat(params.data.sum, 2) +\n                    \"}\"\n                  );\n                  // return (\n                  //   \"{fline|\" + \" \" + params.data.name + \" \" + \"重点关注\" + \"}\"\n                  // );\n                },\n                position: [0, -90],\n                distance: 40,\n                backgroundColor: {\n                  image: require(\"@/assets/images/material/exports/group-9.png\"),\n                },\n                // borderColor: \"rgba(0,191,255,.9)\",\n                borderWidth: 2,\n                padding: [32, 48],\n                borderRadius: 3,\n                lineHeight: 24,\n                verticalAlign: \"middle\",\n                color: \"#fff\",\n                z: 11,\n                textStyle: {\n                  fontSize: 20,\n                },\n                rich: {\n                  fnum: {\n                    fontSize: 20,\n                    color: \"#FF9029\",\n                  },\n                  fline: {\n                    fontSize: 20,\n                    color: \"rgba(255, 255, 255, .6)\",\n                  },\n                },\n              },\n            },\n            itemStyle: {\n              normal: {\n                color: \"#F5B523\",\n                shadowBlur: 2,\n              },\n            },\n          },\n          {\n            type: \"lines\",\n            zlevel: 11,\n            effect: {\n              show: true,\n              period: 5,\n              color: \"rgba(127,255,170, 1)\",\n            },\n            lineStyle: {\n              normal: {\n                color: new this.$echarts.graphic.LinearGradient(\n                  0,\n                  0,\n                  0,\n                  1,\n                  [\n                    {\n                      offset: 0,\n                      color: \"rgba(127,255,170, 1)\",\n                    },\n                    {\n                      offset: 1,\n                      color: \"rgba(127,255,170, 0)\",\n                    },\n                  ],\n                  false\n                ),\n                width: 2,\n                opacity: 0.5,\n                curveness: 0,\n              },\n            },\n            // data: chartData\n            //   ? chartData.map(item => {\n            //       return {\n            //         fromName: 1,\n            //         toName: 1,\n            //         coords: [\n            //           [Number(item.value[0]), Number(item.value[1])],\n            //           [Number(item.value[0]), Number(item.value[1]) + 3]\n            //         ]\n            //       };\n            //     })\n            //   : []\n            // data: Object.keys(geoCoordMap).map(item => {\n            //   return {\n            //     fromName: 1,\n            //     toName: 1,\n            //     coords: [\n            //       geoCoordMap[item],\n            //       [geoCoordMap[item][0], geoCoordMap[item][1] + 3]\n            //     ]\n            //   };\n            // })\n            // data: [\n            //   {\n            //     fromName: 1,\n            //     toName: 1,\n            //     coords: [\n            //       [116.24, 39.55],\n            //       [116.24, 42.55]\n            //     ]\n            //   }\n            // ]\n          },\n        ],\n      });\n    },\n    formattedNumber(num) {\n      num = (num || 0).toString();\n      var result = \"\";\n      while (num.length > 3) {\n        result = \",\" + num.slice(-3) + result;\n        num = num.slice(0, num.length - 3);\n      }\n      if (num) {\n        result = num + result;\n      }\n      return result;\n    },\n\n    // 格式化千分位\n    thousandFormat(value, fixed) {\n      fixed = fixed !== undefined ? fixed : 2;\n      if (value === null || value === undefined || isNaN(parseFloat(value))) {\n        return;\n      }\n      // 将数字进行千分位格式化\n      function toThousands(num) {\n        num = (num || 0).toString();\n        var parts = num.split(\".\");\n        var bigZeroPart = parts[0];\n        var result = \"\";\n        while (bigZeroPart.length > 3) {\n          result = \",\" + bigZeroPart.slice(-3) + result;\n          bigZeroPart = bigZeroPart.slice(0, bigZeroPart.length - 3);\n        }\n        if (bigZeroPart) {\n          result = bigZeroPart + result;\n        }\n        if (parts.length > 1) {\n          result += \".\" + parts[1].toString();\n        }\n        return result;\n      }\n\n      value = parseFloat(value).toFixed(fixed);\n      value = toThousands(value);\n      return value;\n    },\n    // rollMap() {\n    //   var _that = this;\n    //   // if (mapInterval) clearInterval(mapInterval);\n    //   this.rollMapInterval = setInterval(\n    //     () => {\n    //       if (_that.mapIndex > this.chartData.length - 1) {\n    //         _that.mapIndex = 0;\n    //       }\n    //       _that.initMap(\n    //         _that.chartData.slice(_that.mapIndex, _that.mapIndex + 1)\n    //       );\n    //       this.$nextTick(() => {\n    //         _that.mapIndex += 2;\n    //       });\n    //     },\n    //     5000,\n    //     _that\n    //   );\n    // }\n  },\n  beforeDestroy() {\n    // clearInterval(this.rollMapInterval);\n  },\n  components: {},\n  watch: {\n    chartData: function (newVal) {\n      this.initMap(newVal, this.mapPopData);\n    },\n    mapPopData: function (newVal) {\n      this.initMap(this.chartData, newVal);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.map-charts,\n#middleMap {\n  height: 100%;\n  width: 100%;\n}\n</style>\n"],"sourceRoot":"src/components/china"}]}