{"remainingRequest":"D:\\Awork\\jinchukou\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Awork\\jinchukou\\node_modules\\babel-loader\\lib\\index.js!D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Awork\\jinchukou\\src\\components\\zhiliang\\zhiliangrightone.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Awork\\jinchukou\\src\\components\\zhiliang\\zhiliangrightone.vue","mtime":1602558110803},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nexport default {\n  name: \"\",\n  props: [\"chartData\"],\n  mounted: function mounted() {\n    this.initLineChart(this.chartData);\n  },\n  data: function data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initLineChart: function initLineChart(data) {\n      //   if (!data || JSON.stringify(data) == '\"{}\"') return;\n      var myCharts = this.$echarts.init(document.getElementById(\"zhiliangrightone\"));\n      myCharts.setOption({\n        tooltip: {\n          //提示框组件\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          },\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: 1,\n          padding: [6, 12],\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: 10\n          }\n        },\n        grid: {\n          // 柱状图位置\n          x: 50,\n          y: 50,\n          x2: 30,\n          y2: 50\n        },\n        legend: {\n          // data: [\"正常\"],\n          show: true,\n          top: \"4%\",\n          right: \"10%\",\n          itemWidth: 8,\n          itemHeight: 12,\n          // icon: \"roundRect\",\n          color: \"#59ecff\",\n          textStyle: {\n            color: \"#b3bfca\"\n          }\n        },\n        xAxis: {\n          data: [\"厦门\", \"北京\", \"上海\", \"广州\", \"深圳\", \"宁波\", \"公司部\", \"天津\", \"山东\", \"安徽\"],\n          axisLabel: {\n            interval: 0,\n            //控制坐标是否全部显示\n            inside: false,\n            textStyle: {\n              color: \"#ccd7d7\",\n              fontSize: 12\n            },\n            margin: 10 // formatter: function (params) {\n            //   var newParamsName = \"\"; // 最终拼接成的字符串\n            //   var paramsNameNumber = params.length; // 实际标签的个数\n            //   var provideNumber = 2; // 每行能显示的字的个数\n            //   var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\n            //   /**\n            //    * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\n            //    */\n            //   // 条件等同于rowNumber>1\n            //   if (paramsNameNumber > provideNumber) {\n            //     /** 循环每一行,p表示行 */\n            //     for (var p = 0; p < rowNumber; p++) {\n            //       var tempStr = \"\"; // 表示每一次截取的字符串\n            //       var start = p * provideNumber; // 开始截取的位置\n            //       var end = start + provideNumber; // 结束截取的位置\n            //       // 此处特殊处理最后一行的索引值\n            //       if (p == rowNumber - 1) {\n            //         // 最后一次不换行\n            //         tempStr = params.substring(start, paramsNameNumber);\n            //       } else {\n            //         // 每一次拼接字符串并换行\n            //         tempStr = params.substring(start, end) + \"\\n\";\n            //       }\n            //       newParamsName += tempStr; // 最终拼成的字符串\n            //     }\n            //   } else {\n            //     // 将旧标签的值赋给新标签\n            //     newParamsName = params;\n            //   }\n            //   //将最终的字符串返回\n            //   return newParamsName;\n            // },\n\n          },\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              type: \"solid\",\n              color: \"#83aac4\"\n            }\n          },\n          z: 10\n        },\n        yAxis: {\n          splitNumber: 4,\n          min: 0,\n          max: 80,\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            textStyle: {\n              color: \"#999\"\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              type: \"dashed\",\n              color: \"#808079\"\n            }\n          }\n        },\n        series: [{\n          name: \"正常\",\n          type: \"bar\",\n          stack: \"aa\",\n          barWidth: 18,\n          itemStyle: {\n            color: \"#0975d9\"\n          },\n          // itemStyle: {\n          //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          //     { offset: 0, color: \"#20F2FF\" },\n          //     { offset: 1, color: \"#003FBE\" },\n          //   ]),\n          // },\n          data: [40, 30, 26, 20, 22, 20, 22, 16, 15, 13]\n        }, {\n          name: \"不良\",\n          type: \"bar\",\n          stack: \"aa\",\n          barWidth: 18,\n          itemStyle: {\n            color: \"#78e7ff\"\n          },\n          // itemStyle: {\n          //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          //     { offset: 0, color: \"#20F2FF\" },\n          //     { offset: 1, color: \"#003FBE\" },\n          //   ]),\n          // },\n          data: [13, 14, 10, 17, 10, 8, 4, 9, 10, 5]\n        }, {\n          name: \"关注\",\n          type: \"bar\",\n          stack: \"aa\",\n          barWidth: 18,\n          itemStyle: {\n            color: \"#b4a8ff\"\n          },\n          // itemStyle: {\n          //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          //     { offset: 0, color: \"#20F2FF\" },\n          //     { offset: 1, color: \"#003FBE\" },\n          //   ]),\n          // },\n          data: [20, 24, 20, 12, 13, 16, 15, 14, 13, 12]\n        }]\n      });\n    }\n  },\n  components: {}\n};",{"version":3,"sources":["zhiliangrightone.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"zhiliangrightone\" id=\"zhiliangrightone\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"\",\r\n  props: [\"chartData\"],\r\n  mounted() {\r\n    this.initLineChart(this.chartData);\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  computed: {},\r\n  methods: {\r\n    initLineChart(data) {\r\n      //   if (!data || JSON.stringify(data) == '\"{}\"') return;\r\n      let myCharts = this.$echarts.init(\r\n        document.getElementById(\"zhiliangrightone\")\r\n      );\r\n      myCharts.setOption({\r\n        tooltip: {\r\n          //提示框组件\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n            label: {\r\n              backgroundColor: \"#6a7985\",\r\n            },\r\n          },\r\n          backgroundColor: \"rgba(70,130,180,0.8)\",\r\n          borderColor: \"rgba(47,79,79,1)\",\r\n          borderWidth: 1,\r\n          padding: [6, 12],\r\n          textStyle: {\r\n            color: \"rgba(255, 255, 255, 0.8)\",\r\n            fontStyle: \"normal\",\r\n            fontFamily: \"微软雅黑\",\r\n            fontSize: 10,\r\n          },\r\n        },\r\n        grid: {\r\n          // 柱状图位置\r\n          x: 50,\r\n          y: 50,\r\n          x2: 30,\r\n          y2: 50,\r\n        },\r\n        legend: {\r\n          // data: [\"正常\"],\r\n          show: true,\r\n          top: \"4%\",\r\n          right: \"10%\",\r\n          itemWidth: 8,\r\n          itemHeight: 12,\r\n          // icon: \"roundRect\",\r\n          color: \"#59ecff\",\r\n          textStyle: {\r\n            color: \"#b3bfca\",\r\n          },\r\n        },\r\n        xAxis: {\r\n          data: [\r\n            \"厦门\",\r\n            \"北京\",\r\n            \"上海\",\r\n            \"广州\",\r\n            \"深圳\",\r\n            \"宁波\",\r\n            \"公司部\",\r\n            \"天津\",\r\n            \"山东\",\r\n            \"安徽\",\r\n          ],\r\n          axisLabel: {\r\n            interval: 0, //控制坐标是否全部显示\r\n            inside: false,\r\n            textStyle: {\r\n              color: \"#ccd7d7\",\r\n              fontSize: 12,\r\n            },\r\n            margin: 10,\r\n            // formatter: function (params) {\r\n            //   var newParamsName = \"\"; // 最终拼接成的字符串\r\n            //   var paramsNameNumber = params.length; // 实际标签的个数\r\n            //   var provideNumber = 2; // 每行能显示的字的个数\r\n            //   var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\r\n            //   /**\r\n            //    * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\r\n            //    */\r\n            //   // 条件等同于rowNumber>1\r\n            //   if (paramsNameNumber > provideNumber) {\r\n            //     /** 循环每一行,p表示行 */\r\n            //     for (var p = 0; p < rowNumber; p++) {\r\n            //       var tempStr = \"\"; // 表示每一次截取的字符串\r\n            //       var start = p * provideNumber; // 开始截取的位置\r\n            //       var end = start + provideNumber; // 结束截取的位置\r\n            //       // 此处特殊处理最后一行的索引值\r\n            //       if (p == rowNumber - 1) {\r\n            //         // 最后一次不换行\r\n            //         tempStr = params.substring(start, paramsNameNumber);\r\n            //       } else {\r\n            //         // 每一次拼接字符串并换行\r\n            //         tempStr = params.substring(start, end) + \"\\n\";\r\n            //       }\r\n            //       newParamsName += tempStr; // 最终拼成的字符串\r\n            //     }\r\n            //   } else {\r\n            //     // 将旧标签的值赋给新标签\r\n            //     newParamsName = params;\r\n            //   }\r\n            //   //将最终的字符串返回\r\n            //   return newParamsName;\r\n            // },\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              type: \"solid\",\r\n              color: \"#83aac4\",\r\n            },\r\n          },\r\n          z: 10,\r\n        },\r\n        yAxis: {\r\n          splitNumber: 4,\r\n          min: 0,\r\n          max: 80,\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"#999\",\r\n            },\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              type: \"dashed\",\r\n              color: \"#808079\",\r\n            },\r\n          },\r\n        },\r\n\r\n        series: [\r\n          {\r\n            name: \"正常\",\r\n            type: \"bar\",\r\n            stack: \"aa\",\r\n            barWidth: 18,\r\n            itemStyle: {\r\n              color: \"#0975d9\",\r\n            },\r\n            // itemStyle: {\r\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            //     { offset: 0, color: \"#20F2FF\" },\r\n            //     { offset: 1, color: \"#003FBE\" },\r\n            //   ]),\r\n            // },\r\n            data: [40, 30, 26, 20, 22, 20, 22, 16, 15, 13],\r\n          },\r\n          {\r\n            name: \"不良\",\r\n            type: \"bar\",\r\n            stack: \"aa\",\r\n            barWidth: 18,\r\n            itemStyle: {\r\n              color: \"#78e7ff\",\r\n            },\r\n            // itemStyle: {\r\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            //     { offset: 0, color: \"#20F2FF\" },\r\n            //     { offset: 1, color: \"#003FBE\" },\r\n            //   ]),\r\n            // },\r\n            data: [13, 14, 10, 17, 10, 8, 4, 9, 10, 5],\r\n          },\r\n          {\r\n            name: \"关注\",\r\n            type: \"bar\",\r\n            stack: \"aa\",\r\n            barWidth: 18,\r\n            itemStyle: {\r\n              color: \"#b4a8ff\",\r\n            },\r\n            // itemStyle: {\r\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            //     { offset: 0, color: \"#20F2FF\" },\r\n            //     { offset: 1, color: \"#003FBE\" },\r\n            //   ]),\r\n            // },\r\n            data: [20, 24, 20, 12, 13, 16, 15, 14, 13, 12],\r\n          },\r\n        ],\r\n      });\r\n    },\r\n  },\r\n  components: {},\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.zhiliangrightone {\r\n  width: 30.104vw;\r\n  height: 22.292vw;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/zhiliang"}]}