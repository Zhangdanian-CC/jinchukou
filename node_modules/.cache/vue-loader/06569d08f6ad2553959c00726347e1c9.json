{"remainingRequest":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Awork\\jinchukou\\src\\components\\china\\rightColorLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Awork\\jinchukou\\src\\components\\china\\rightColorLine.vue","mtime":1602725996623},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: \"\",\n  props: [\"ids\", \"chartData\"],\n  mounted() {\n    this.initColumnChart(this.ids, this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initColumnChart(id, data, currentPro) {\n      //   if (!data || JSON.stringify(data) == '\"{}\"') return;\n      let e = document.body.clientWidth;\n      let myCharts = this.$echarts.init(document.getElementById(id));\n      myCharts.setOption({\n        tooltip: {\n          //提示框组件\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: e/1600*1,\n          padding: [e/1600*6, e/1600*12],\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: e/1600*10,\n            lineHeight: (e / 1600) * 18,\n          },\n        },\n        grid: {\n          // 柱状图位置\n          x: e/1600*30,\n          y: e/1600*30,\n          x2: e/1600*10,\n          y2: e/1600*20,\n        },\n        legend: {\n          // data: [\"正常\"],\n          show: true,\n          top: \"0%\",\n          right: \"7%\",\n          itemWidth: e/1600*8,\n          itemHeight: e/1600*12,\n          // icon: \"roundRect\",\n          color: \"#59ecff\",\n          textStyle: {\n            color: \"#b3bfca\",\n          },\n        },\n        xAxis: {\n          data: [\n            \"厦门\",\n            \"北京\",\n            \"上海\",\n            \"广州\",\n            \"深圳\",\n            \"宁波\",\n            \"公司部\",\n            \"天津\",\n            \"山东\",\n            \"安徽\",\n          ],\n          axisLabel: {\n            interval: 0, //控制坐标是否全部显示\n            inside: false,\n            textStyle: {\n              color: \"#ccd7d7\",\n              fontSize: e/1600*12,\n            },\n            margin: e/1600*10,\n            \n          },\n          axisTick: {\n            show: false,\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              type: \"solid\",\n              color: \"#83aac4\",\n            },\n          },\n          z: 10,\n        },\n        yAxis: {\n          splitNumber: 4,\n          min: 0,\n          max: 80,\n          axisLine: {\n            show: false,\n          },\n          axisTick: {\n            show: false,\n          },\n          axisLabel: {\n            textStyle: {\n              color: \"#999\",\n              fontSize: e/1600*12,\n            },\n          },\n          splitLine: {\n            lineStyle: {\n              type: \"dashed\",\n              color: \"#808079\",\n            },\n          },\n        },\n\n        series: [\n          {\n            name: \"正常\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: e/1600*12,\n            itemStyle: {\n              color: \"#0975d9\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [40, 30, 26, 20, 22, 20, 22, 16, 15, 13],\n          },\n          {\n            name: \"不良\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: e/1600*12,\n            itemStyle: {\n              color: \"#78e7ff\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [13, 14, 10, 17, 10, 8, 4, 9, 10, 5],\n          },\n          {\n            name: \"关注\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: e/1600*12,\n            itemStyle: {\n              color: \"#b4a8ff\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [20, 24, 20, 12, 13, 16, 15, 14, 13, 12],\n          },\n        ],\n      });\n      //根据窗口的大小变动图表 \n      window.onresize = function () {\n        myCharts.resize();\n        //myChart1.resize();    //若有多个图表变动，可多写\n      };\n    },\n  },\n  components: {},\n  watch: {\n    chartData: function (newVal) {\n      this.initColumnChart(this.ids, newVal);\n    },\n  },\n};\n",{"version":3,"sources":["rightColorLine.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rightColorLine.vue","sourceRoot":"src/components/china","sourcesContent":["<template>\n  <div class=\"line-box\" :id=\"ids\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"\",\n  props: [\"ids\", \"chartData\"],\n  mounted() {\n    this.initColumnChart(this.ids, this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initColumnChart(id, data, currentPro) {\n      //   if (!data || JSON.stringify(data) == '\"{}\"') return;\n      let e = document.body.clientWidth;\n      let myCharts = this.$echarts.init(document.getElementById(id));\n      myCharts.setOption({\n        tooltip: {\n          //提示框组件\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: e/1600*1,\n          padding: [e/1600*6, e/1600*12],\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: e/1600*10,\n            lineHeight: (e / 1600) * 18,\n          },\n        },\n        grid: {\n          // 柱状图位置\n          x: e/1600*30,\n          y: e/1600*30,\n          x2: e/1600*10,\n          y2: e/1600*20,\n        },\n        legend: {\n          // data: [\"正常\"],\n          show: true,\n          top: \"0%\",\n          right: \"7%\",\n          itemWidth: e/1600*8,\n          itemHeight: e/1600*12,\n          // icon: \"roundRect\",\n          color: \"#59ecff\",\n          textStyle: {\n            color: \"#b3bfca\",\n          },\n        },\n        xAxis: {\n          data: [\n            \"厦门\",\n            \"北京\",\n            \"上海\",\n            \"广州\",\n            \"深圳\",\n            \"宁波\",\n            \"公司部\",\n            \"天津\",\n            \"山东\",\n            \"安徽\",\n          ],\n          axisLabel: {\n            interval: 0, //控制坐标是否全部显示\n            inside: false,\n            textStyle: {\n              color: \"#ccd7d7\",\n              fontSize: e/1600*12,\n            },\n            margin: e/1600*10,\n            \n          },\n          axisTick: {\n            show: false,\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              type: \"solid\",\n              color: \"#83aac4\",\n            },\n          },\n          z: 10,\n        },\n        yAxis: {\n          splitNumber: 4,\n          min: 0,\n          max: 80,\n          axisLine: {\n            show: false,\n          },\n          axisTick: {\n            show: false,\n          },\n          axisLabel: {\n            textStyle: {\n              color: \"#999\",\n              fontSize: e/1600*12,\n            },\n          },\n          splitLine: {\n            lineStyle: {\n              type: \"dashed\",\n              color: \"#808079\",\n            },\n          },\n        },\n\n        series: [\n          {\n            name: \"正常\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: e/1600*12,\n            itemStyle: {\n              color: \"#0975d9\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [40, 30, 26, 20, 22, 20, 22, 16, 15, 13],\n          },\n          {\n            name: \"不良\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: e/1600*12,\n            itemStyle: {\n              color: \"#78e7ff\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [13, 14, 10, 17, 10, 8, 4, 9, 10, 5],\n          },\n          {\n            name: \"关注\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: e/1600*12,\n            itemStyle: {\n              color: \"#b4a8ff\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [20, 24, 20, 12, 13, 16, 15, 14, 13, 12],\n          },\n        ],\n      });\n      //根据窗口的大小变动图表 \n      window.onresize = function () {\n        myCharts.resize();\n        //myChart1.resize();    //若有多个图表变动，可多写\n      };\n    },\n  },\n  components: {},\n  watch: {\n    chartData: function (newVal) {\n      this.initColumnChart(this.ids, newVal);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"]}]}