{"remainingRequest":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Awork\\jinchukou\\src\\components\\china\\rightColorLine.vue?vue&type=style&index=0&id=05c7e183&lang=less&scoped=true&","dependencies":[{"path":"D:\\Awork\\jinchukou\\src\\components\\china\\rightColorLine.vue","mtime":1602579630315},{"path":"D:\\Awork\\jinchukou\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.line-box {\n  height: 10.46vw;\n  width: 13.95vw;\n}\n",{"version":3,"sources":["rightColorLine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA;AACA;AACA;AACA","file":"rightColorLine.vue","sourceRoot":"src/components/china","sourcesContent":["<template>\n  <div class=\"line-box\" :id=\"ids\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"\",\n  props: [\"ids\", \"chartData\"],\n  mounted() {\n    this.initColumnChart(this.ids, this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initColumnChart(id, data, currentPro) {\n      //   if (!data || JSON.stringify(data) == '\"{}\"') return;\n      let myCharts = this.$echarts.init(document.getElementById(id));\n      myCharts.setOption({\n        tooltip: {\n          //提示框组件\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: 1,\n          padding: [6, 12],\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: 10,\n          },\n        },\n        grid: {\n          // 柱状图位置\n          x: 50,\n          y: 50,\n          x2: 30,\n          y2: 50,\n        },\n        legend: {\n          // data: [\"正常\"],\n          show: true,\n          top: \"4%\",\n          right: \"10%\",\n          itemWidth: 8,\n          itemHeight: 12,\n          // icon: \"roundRect\",\n          color: \"#59ecff\",\n          textStyle: {\n            color: \"#b3bfca\",\n          },\n        },\n        xAxis: {\n          data: [\n            \"厦门\",\n            \"北京\",\n            \"上海\",\n            \"广州\",\n            \"深圳\",\n            \"宁波\",\n            \"公司部\",\n            \"天津\",\n            \"山东\",\n            \"安徽\",\n          ],\n          axisLabel: {\n            interval: 0, //控制坐标是否全部显示\n            inside: false,\n            textStyle: {\n              color: \"#ccd7d7\",\n              fontSize: 12,\n            },\n            margin: 10,\n            // formatter: function (params) {\n            //   var newParamsName = \"\"; // 最终拼接成的字符串\n            //   var paramsNameNumber = params.length; // 实际标签的个数\n            //   var provideNumber = 2; // 每行能显示的字的个数\n            //   var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\n            //   /**\n            //    * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\n            //    */\n            //   // 条件等同于rowNumber>1\n            //   if (paramsNameNumber > provideNumber) {\n            //     /** 循环每一行,p表示行 */\n            //     for (var p = 0; p < rowNumber; p++) {\n            //       var tempStr = \"\"; // 表示每一次截取的字符串\n            //       var start = p * provideNumber; // 开始截取的位置\n            //       var end = start + provideNumber; // 结束截取的位置\n            //       // 此处特殊处理最后一行的索引值\n            //       if (p == rowNumber - 1) {\n            //         // 最后一次不换行\n            //         tempStr = params.substring(start, paramsNameNumber);\n            //       } else {\n            //         // 每一次拼接字符串并换行\n            //         tempStr = params.substring(start, end) + \"\\n\";\n            //       }\n            //       newParamsName += tempStr; // 最终拼成的字符串\n            //     }\n            //   } else {\n            //     // 将旧标签的值赋给新标签\n            //     newParamsName = params;\n            //   }\n            //   //将最终的字符串返回\n            //   return newParamsName;\n            // },\n          },\n          axisTick: {\n            show: false,\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              type: \"solid\",\n              color: \"#83aac4\",\n            },\n          },\n          z: 10,\n        },\n        yAxis: {\n          splitNumber: 4,\n          min: 0,\n          max: 80,\n          axisLine: {\n            show: false,\n          },\n          axisTick: {\n            show: false,\n          },\n          axisLabel: {\n            textStyle: {\n              color: \"#999\",\n            },\n          },\n          splitLine: {\n            lineStyle: {\n              type: \"dashed\",\n              color: \"#808079\",\n            },\n          },\n        },\n\n        series: [\n          {\n            name: \"正常\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: 12,\n            itemStyle: {\n              color: \"#0975d9\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [40, 30, 26, 20, 22, 20, 22, 16, 15, 13],\n          },\n          {\n            name: \"不良\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: 12,\n            itemStyle: {\n              color: \"#78e7ff\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [13, 14, 10, 17, 10, 8, 4, 9, 10, 5],\n          },\n          {\n            name: \"关注\",\n            type: \"bar\",\n            stack: \"aa\",\n            barWidth: 12,\n            itemStyle: {\n              color: \"#b4a8ff\",\n            },\n            // itemStyle: {\n            //   color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     { offset: 0, color: \"#20F2FF\" },\n            //     { offset: 1, color: \"#003FBE\" },\n            //   ]),\n            // },\n            data: [20, 24, 20, 12, 13, 16, 15, 14, 13, 12],\n          },\n        ],\n      });\n    },\n  },\n  components: {},\n  watch: {\n    chartData: function (newVal) {\n      this.initColumnChart(this.ids, newVal);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.line-box {\n  height: 10.46vw;\n  width: 13.95vw;\n}\n</style>\n"]}]}