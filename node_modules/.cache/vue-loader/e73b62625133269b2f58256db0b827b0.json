{"remainingRequest":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Awork\\jinchukou\\src\\components\\guimo\\zichanpie.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Awork\\jinchukou\\src\\components\\guimo\\zichanpie.vue","mtime":1602207060282},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\nexport default {\n  name: \"\",\n  props: [\"chartData\"],\n  mounted() {\n    this.initPie(this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initPie(data) {\n      const colorList = [\"#1d83fa\", \"#5dbafd\", \"#5b4cff\", \"#0048f1\"];\n\n      let chart = this.$echarts.init(document.getElementById(\"zichanpie\"));\n      chart.setOption({\n        tooltip: {\n          trigger: \"item\",\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: 1,\n          padding: [12, 20],\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: 14,\n          },\n          formatter: \"{b}<br />({d}%)<br/>{a}: {c}亿\",\n        },\n        color: colorList,\n        series: [\n          {\n            name: \"余额\",\n            type: \"pie\",\n            radius: 60,\n            center: [\"55%\", \"40%\"],\n            startAngle: 60,\n            labelLine: {\n              normal: {\n                length: 10,\n                length2: 50,\n                lineStyle: {\n                  type: \"solid\",\n                  width: 1,\n                },\n              },\n            },\n            avoidLabelOverlap: true,\n            stillShowZeroSum: true,\n            minShowLabelAngle: 10,\n            label: {\n              position: \"outer\",\n              alignTo: \"labelLine\", // label两端对称布局\n              //  ECharts v4.6.0 版本起，提供了 'labelLine' 与 'edge' 两种新的布局方式\n              margin: 30, // 布局为两端对称时候需要外边距防止图表变形 数值随意不要太大\n              distanceToLabelLine: 1, // label距离引导线距离\n              // formatter: \"{b}\" + \"\\n\" + \"{a}: {c}亿\" + \"\\n\" + \"({d}%)\",\n              formatter: \"{b}\" + \"\\n\" +  \"({d}%)\",\n              borderWidth: 0,\n              borderRadius: 1,\n              // padding: [0, -50],\n              // height: 40,\n              // fontSize: 12,\n              // align: \"left\",\n              // color: \"#3494BD\",\n              fontSize: 12,\n              lineHeight: 16,\n              color: \"#fff\",\n              padding: [12, 0, 25, 0],\n              rich: {\n                b: {\n                  fontSize: 12,\n                  lineHeight: 16,\n                  color: \"rgba(255,255,255,.7)\",\n                  padding: [12, 0, 25, 0],\n                },\n                c: {\n                  fontSize: 12,\n                  lineHeight: 16,\n                  color: \"#fff\",\n                  padding: [12, 0, 25, 0],\n                },\n                d: {\n                  fontSize: 12,\n                  lineHeight: 16,\n                  color: \"#fff\",\n                  padding: [12, 0, 25, 0],\n                },\n              },\n            },\n            data: this.leftData\n              ? this.leftData.map((item, index) => {\n                  return {\n                    name: this.type[index],\n                    value: item,\n                  };\n                })\n              : [\n                  { name: \"对外投资贷款\", value: 2726.65, per: \"8.07%\" },\n                  {\n                    name: \"境内对外开发支持贷款\",\n                    value: 11389.88,\n                    per: \"33.77%\",\n                  },\n                  { name: \"对外合作贷款\", value: 8861.78, per: \"26.25%\" },\n                  { name: \"对外贸易贷款\", value: 10765.34, per: \"31.89%\" },\n                ],\n          },\n        ],\n      });\n      chart.on(\"click\", (params) => {\n        this.$store.commit(\"newDialogData\", params.name);\n        this.$store.commit(\"newDialogVisible\", true);\n      });\n    },\n  },\n  components: {},\n  watch: {\n    chartData: function (newVal) {\n      this.initPie(this.ids, newVal);\n    },\n  },\n};\n",{"version":3,"sources":["zichanpie.vue"],"names":[],"mappingsfile":"zichanpie.vue","sourceRoot":"src/components/guimo","sourcesContent":["<template>\n  <div class=\"zichan-pie\" id=\"zichanpie\"></div>\n</template>\n<script>\nexport default {\n  name: \"\",\n  props: [\"chartData\"],\n  mounted() {\n    this.initPie(this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initPie(data) {\n      const colorList = [\"#1d83fa\", \"#5dbafd\", \"#5b4cff\", \"#0048f1\"];\n\n      let chart = this.$echarts.init(document.getElementById(\"zichanpie\"));\n      chart.setOption({\n        tooltip: {\n          trigger: \"item\",\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: 1,\n          padding: [12, 20],\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: 14,\n          },\n          formatter: \"{b}<br />({d}%)<br/>{a}: {c}亿\",\n        },\n        color: colorList,\n        series: [\n          {\n            name: \"余额\",\n            type: \"pie\",\n            radius: 60,\n            center: [\"55%\", \"40%\"],\n            startAngle: 60,\n            labelLine: {\n              normal: {\n                length: 10,\n                length2: 50,\n                lineStyle: {\n                  type: \"solid\",\n                  width: 1,\n                },\n              },\n            },\n            avoidLabelOverlap: true,\n            stillShowZeroSum: true,\n            minShowLabelAngle: 10,\n            label: {\n              position: \"outer\",\n              alignTo: \"labelLine\", // label两端对称布局\n              //  ECharts v4.6.0 版本起，提供了 'labelLine' 与 'edge' 两种新的布局方式\n              margin: 30, // 布局为两端对称时候需要外边距防止图表变形 数值随意不要太大\n              distanceToLabelLine: 1, // label距离引导线距离\n              // formatter: \"{b}\" + \"\\n\" + \"{a}: {c}亿\" + \"\\n\" + \"({d}%)\",\n              formatter: \"{b}\" + \"\\n\" +  \"({d}%)\",\n              borderWidth: 0,\n              borderRadius: 1,\n              // padding: [0, -50],\n              // height: 40,\n              // fontSize: 12,\n              // align: \"left\",\n              // color: \"#3494BD\",\n              fontSize: 12,\n              lineHeight: 16,\n              color: \"#fff\",\n              padding: [12, 0, 25, 0],\n              rich: {\n                b: {\n                  fontSize: 12,\n                  lineHeight: 16,\n                  color: \"rgba(255,255,255,.7)\",\n                  padding: [12, 0, 25, 0],\n                },\n                c: {\n                  fontSize: 12,\n                  lineHeight: 16,\n                  color: \"#fff\",\n                  padding: [12, 0, 25, 0],\n                },\n                d: {\n                  fontSize: 12,\n                  lineHeight: 16,\n                  color: \"#fff\",\n                  padding: [12, 0, 25, 0],\n                },\n              },\n            },\n            data: this.leftData\n              ? this.leftData.map((item, index) => {\n                  return {\n                    name: this.type[index],\n                    value: item,\n                  };\n                })\n              : [\n                  { name: \"对外投资贷款\", value: 2726.65, per: \"8.07%\" },\n                  {\n                    name: \"境内对外开发支持贷款\",\n                    value: 11389.88,\n                    per: \"33.77%\",\n                  },\n                  { name: \"对外合作贷款\", value: 8861.78, per: \"26.25%\" },\n                  { name: \"对外贸易贷款\", value: 10765.34, per: \"31.89%\" },\n                ],\n          },\n        ],\n      });\n      chart.on(\"click\", (params) => {\n        this.$store.commit(\"newDialogData\", params.name);\n        this.$store.commit(\"newDialogVisible\", true);\n      });\n    },\n  },\n  components: {},\n  watch: {\n    chartData: function (newVal) {\n      this.initPie(this.ids, newVal);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.zichan-pie {\n  text-align: center;\n  width: 100%;\n  height: 130%;\n  left: -3vw;\n}\n</style>\n"]}]}