{"remainingRequest":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Awork\\jinchukou\\src\\components\\china\\mergeColumnBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Awork\\jinchukou\\src\\components\\china\\mergeColumnBox.vue","mtime":1602725967894},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: \"\",\n  props: [\"ids\", \"chartData\"],\n  mounted() {\n    this.initColumnChart(this.ids, this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initColumnChart(id, data) {\n      // if (!data || JSON.stringify(data) == '\"{}\"') return;\n      let e = document.body.clientWidth;\n      let myCharts = this.$echarts.init(document.getElementById(id));\n      let lineColor = [\"rgba(9,117,217,1)\", \"rgba(120,231,255,1)\"];\n      myCharts.setOption({\n        tooltip: {\n          //提示框组件\n          trigger: \"axis\",\n          // formatter: \"{b}<br />{a0}: {c0}<br />{a1}: {c1}\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          },\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: e/1600*10,\n            lineHeight: (e / 1600) * 18,\n          },\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: e/1600*1,\n          padding: [e/1600*6, e/1600*6]\n          // formatter: function(params) {\n          //   let tempStr = params.map((item, index) => {\n          //     return (\n          //       \"</br><span style='display:inline-block;margin-right:25px;border-radius:25px;width:40px;height:40px;background-color:\" +\n          //       lineColor[index] +\n          //       \"'></span>\" +\n          //       item.seriesName +\n          //       \"：\" +\n          //       item.value\n          //     );\n          //   });\n          //   return params[0].name + tempStr.join(\" \");\n          // }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"3%\",\n          bottom: \"1%\",\n          top: \"20%\",\n          //\tpadding:'0 0 10 0',\n          containLabel: true\n        },\n        legend: {\n          //图例组件，颜色和名字\n          right: \"3%\",\n          top: \"3%\",\n          itemGap: e/1600*16,\n          itemWidth: e/1600*10,\n          itemHeight: e/1600*10,\n          data: [\n            {\n              name: data.y ? data.y[0].name : \"政策性业务余额\"\n              //icon:'image://../wwwroot/js/url2.png', //路径\n            },\n            {\n              name: data.y ? data.y[1].name : \"自营性业务余额\"\n            }\n          ],\n          textStyle: {\n            color: \"#a8aab0\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: e/1600*10\n          }\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            //\tboundaryGap: true,//坐标轴两边留白\n            data: data.x\n              ? data.x[0].data\n              : [\n                  \"1月\",\n                  \"2月\",\n                  \"3月\",\n                  \"4月\",\n                  \"5月\",\n                  \"6月\",\n                  \"7月\",\n                  \"8月\",\n                  \"9月\",\n                  \"10月\",\n                  \"11月\",\n                  \"12月\"\n                ],\n            axisLabel: {\n              //坐标轴刻度标签的相关设置。\n              interval: 0, //设置为 1，表示『隔一个标签显示一个标签』\n              //\tmargin:15,\n              textStyle: {\n                color: \"rgba(255,255,255,.6)\",\n                fontStyle: \"normal\",\n                fontFamily: \"微软雅黑\",\n                fontSize: e/1600*10\n              }\n            },\n            axisTick: {\n              //坐标轴刻度相关设置。\n              show: false\n            },\n            axisLine: {\n              //坐标轴轴线相关设置\n              lineStyle: {\n                color: \"#fff\",\n                opacity: 0.2\n              }\n            },\n            splitLine: {\n              //坐标轴在 grid 区域中的分隔线。\n              show: false\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\",\n            splitNumber: 5,\n            min: 0,\n            max: 200,\n            axisLabel: {\n              textStyle: {\n                color: \"#a8aab0\",\n                fontStyle: \"normal\",\n                fontFamily: \"微软雅黑\",\n                fontSize: e/1600*10\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: \"rgba(255,255,255,1)\",\n                width: e/1600*1,\n                opacity: 0.2\n              }\n            }\n          }\n        ],\n        series: [\n          {\n            name: data.y ? data.y[0].name : \"政策性业务余额\",\n            stack: \"总量\",\n            type: \"bar\",\n            data: data.y\n              ? data.y[0].data\n              : [10, 15, 30, 45, 55, 60, 62, 80, 82, 84, 88, 90],\n            barWidth: e/1600*10,\n            barGap: 0, //柱间距离\n            itemStyle: {\n              normal: {\n                show: true,\n                // color: \"rgba(9,117,217,1)\",\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgba(32,242,255,1)\"\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgba(0,63,190,1)\"\n                  }\n                ]),\n                barBorderRadius: 0,\n                borderWidth: 0\n              }\n            }\n          },\n          {\n            name: data.y ? data.y[1].name : \"自营性业务余额\",\n            stack: \"总量\",\n            type: \"bar\",\n            data: data.y\n              ? data.y[1].data\n              : [8, 5, 25, 30, 35, 55, 62, 75, 78, 80, 85, 88],\n            barWidth: e/1600*10,\n            barGap: 0, //柱间距离\n            itemStyle: {\n              normal: {\n                show: true,\n                // color: \"rgba(255,189,90,1)\",\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgba(255,189,90,1)\"\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgba(255,162,76,0.45)\"\n                  }\n                ]),\n                barBorderRadius: 0,\n                borderWidth: 0\n              }\n            }\n          }\n        ]\n      });\n      //根据窗口的大小变动图表 \n      window.onresize = function () {\n        myCharts.resize();\n        //myChart1.resize();    //若有多个图表变动，可多写\n      };\n    }\n  },\n  components: {},\n  watch: {\n    chartData: function(newVal) {\n      this.initColumnChart(this.ids, newVal);\n    }\n  }\n};\n",{"version":3,"sources":["mergeColumnBox.vue"],"names":[],"mappingsfile":"mergeColumnBox.vue","sourceRoot":"src/components/china","sourcesContent":["<template>\n  <div class=\"merge-column-box\" :id=\"ids\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"\",\n  props: [\"ids\", \"chartData\"],\n  mounted() {\n    this.initColumnChart(this.ids, this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initColumnChart(id, data) {\n      // if (!data || JSON.stringify(data) == '\"{}\"') return;\n      let e = document.body.clientWidth;\n      let myCharts = this.$echarts.init(document.getElementById(id));\n      let lineColor = [\"rgba(9,117,217,1)\", \"rgba(120,231,255,1)\"];\n      myCharts.setOption({\n        tooltip: {\n          //提示框组件\n          trigger: \"axis\",\n          // formatter: \"{b}<br />{a0}: {c0}<br />{a1}: {c1}\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          },\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: e/1600*10,\n            lineHeight: (e / 1600) * 18,\n          },\n          backgroundColor: \"rgba(70,130,180,0.8)\",\n          borderColor: \"rgba(47,79,79,1)\",\n          borderWidth: e/1600*1,\n          padding: [e/1600*6, e/1600*6]\n          // formatter: function(params) {\n          //   let tempStr = params.map((item, index) => {\n          //     return (\n          //       \"</br><span style='display:inline-block;margin-right:25px;border-radius:25px;width:40px;height:40px;background-color:\" +\n          //       lineColor[index] +\n          //       \"'></span>\" +\n          //       item.seriesName +\n          //       \"：\" +\n          //       item.value\n          //     );\n          //   });\n          //   return params[0].name + tempStr.join(\" \");\n          // }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"3%\",\n          bottom: \"1%\",\n          top: \"20%\",\n          //\tpadding:'0 0 10 0',\n          containLabel: true\n        },\n        legend: {\n          //图例组件，颜色和名字\n          right: \"3%\",\n          top: \"3%\",\n          itemGap: e/1600*16,\n          itemWidth: e/1600*10,\n          itemHeight: e/1600*10,\n          data: [\n            {\n              name: data.y ? data.y[0].name : \"政策性业务余额\"\n              //icon:'image://../wwwroot/js/url2.png', //路径\n            },\n            {\n              name: data.y ? data.y[1].name : \"自营性业务余额\"\n            }\n          ],\n          textStyle: {\n            color: \"#a8aab0\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: e/1600*10\n          }\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            //\tboundaryGap: true,//坐标轴两边留白\n            data: data.x\n              ? data.x[0].data\n              : [\n                  \"1月\",\n                  \"2月\",\n                  \"3月\",\n                  \"4月\",\n                  \"5月\",\n                  \"6月\",\n                  \"7月\",\n                  \"8月\",\n                  \"9月\",\n                  \"10月\",\n                  \"11月\",\n                  \"12月\"\n                ],\n            axisLabel: {\n              //坐标轴刻度标签的相关设置。\n              interval: 0, //设置为 1，表示『隔一个标签显示一个标签』\n              //\tmargin:15,\n              textStyle: {\n                color: \"rgba(255,255,255,.6)\",\n                fontStyle: \"normal\",\n                fontFamily: \"微软雅黑\",\n                fontSize: e/1600*10\n              }\n            },\n            axisTick: {\n              //坐标轴刻度相关设置。\n              show: false\n            },\n            axisLine: {\n              //坐标轴轴线相关设置\n              lineStyle: {\n                color: \"#fff\",\n                opacity: 0.2\n              }\n            },\n            splitLine: {\n              //坐标轴在 grid 区域中的分隔线。\n              show: false\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\",\n            splitNumber: 5,\n            min: 0,\n            max: 200,\n            axisLabel: {\n              textStyle: {\n                color: \"#a8aab0\",\n                fontStyle: \"normal\",\n                fontFamily: \"微软雅黑\",\n                fontSize: e/1600*10\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: \"rgba(255,255,255,1)\",\n                width: e/1600*1,\n                opacity: 0.2\n              }\n            }\n          }\n        ],\n        series: [\n          {\n            name: data.y ? data.y[0].name : \"政策性业务余额\",\n            stack: \"总量\",\n            type: \"bar\",\n            data: data.y\n              ? data.y[0].data\n              : [10, 15, 30, 45, 55, 60, 62, 80, 82, 84, 88, 90],\n            barWidth: e/1600*10,\n            barGap: 0, //柱间距离\n            itemStyle: {\n              normal: {\n                show: true,\n                // color: \"rgba(9,117,217,1)\",\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgba(32,242,255,1)\"\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgba(0,63,190,1)\"\n                  }\n                ]),\n                barBorderRadius: 0,\n                borderWidth: 0\n              }\n            }\n          },\n          {\n            name: data.y ? data.y[1].name : \"自营性业务余额\",\n            stack: \"总量\",\n            type: \"bar\",\n            data: data.y\n              ? data.y[1].data\n              : [8, 5, 25, 30, 35, 55, 62, 75, 78, 80, 85, 88],\n            barWidth: e/1600*10,\n            barGap: 0, //柱间距离\n            itemStyle: {\n              normal: {\n                show: true,\n                // color: \"rgba(255,189,90,1)\",\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgba(255,189,90,1)\"\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgba(255,162,76,0.45)\"\n                  }\n                ]),\n                barBorderRadius: 0,\n                borderWidth: 0\n              }\n            }\n          }\n        ]\n      });\n      //根据窗口的大小变动图表 \n      window.onresize = function () {\n        myCharts.resize();\n        //myChart1.resize();    //若有多个图表变动，可多写\n      };\n    }\n  },\n  components: {},\n  watch: {\n    chartData: function(newVal) {\n      this.initColumnChart(this.ids, newVal);\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"]}]}