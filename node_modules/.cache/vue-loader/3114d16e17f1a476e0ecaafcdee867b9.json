{"remainingRequest":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Awork\\jinchukou\\src\\components\\shengji\\rightIndicator.vue?vue&type=style&index=0&id=da6db02c&lang=less&scoped=true&","dependencies":[{"path":"D:\\Awork\\jinchukou\\src\\components\\shengji\\rightIndicator.vue","mtime":1602233126331},{"path":"D:\\Awork\\jinchukou\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.column-box {\r\n  width: 100%;\r\n  height: 32.3%;\r\n}\r\n",{"version":3,"sources":["rightIndicator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA;AACA","file":"rightIndicator.vue","sourceRoot":"src/components/shengji","sourcesContent":["<template>\r\n  <div class=\"column-box\" :id=\"ids\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"\",\r\n  props: [\"ids\", \"data\", \"title\"],\r\n  mounted() {\r\n    this.initColumnChart(this.ids);\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  computed: {},\r\n  methods: {\r\n    initColumnChart(id) {\r\n      //   if (!data || JSON.stringify(data) == '\"{}\"') return;\r\n      let myCharts = this.$echarts.init(document.getElementById(id));\r\n      myCharts.setOption({\r\n        \r\n        tooltip: {\r\n          //提示框组件\r\n          trigger: \"axis\",\r\n          // formatter: \"{b}<br />{a}: {c}\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n            label: {\r\n              backgroundColor: \"#6a7985\"\r\n            },            \r\n          },        \r\n          backgroundColor: \"rgba(70,130,180,0.8)\",\r\n          borderColor: \"rgba(47,79,79,1)\",\r\n          borderWidth: 1,\r\n          padding: [6, 12],\r\n          textStyle: {\r\n            color: \"rgba(255, 255, 255, 0.8)\",\r\n            fontStyle: \"normal\",\r\n            fontFamily: \"微软雅黑\",\r\n            fontSize: 10\r\n          },\r\n          // formatter: \"{b}<br/>{a}: {c}亿\",\r\n        },\r\n        grid: {\r\n          // 柱状图位置\r\n          x2: 28,\r\n          y:70,\r\n          y2:30\r\n        },\r\n        xAxis: {\r\n          data: [\r\n            \"厦门\",\r\n            \"北京\",\r\n            \"上海\",\r\n            \"广州\",\r\n            \"深圳\",\r\n            \"宁波\",\r\n            \"公司部\",\r\n            \"天津\",\r\n            \"重庆\",\r\n            \"安徽\",\r\n          ],\r\n          axisLabel: {\r\n            interval: 0, //控制坐标是否全部显示\r\n            inside: false,\r\n            textStyle: {\r\n              color: \"#ccd7d7\",\r\n              fontSize: 12 ,\r\n            },\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              type: \"solid\",\r\n              color: \"#83aac4\",\r\n            },\r\n          },\r\n          z: 10,\r\n        },\r\n        yAxis: {\r\n          splitNumber: 4,\r\n          min: 0,\r\n          max: 80,\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: \"#999\",\r\n            },\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              type: \"dashed\",\r\n              color: \"#808079\",\r\n            },\r\n          },\r\n        },\r\n\r\n        series: [\r\n          // {\r\n          //   name:this.title,\r\n          //   type: \"bar\",\r\n          //   barWidth: '20%',\r\n          //   itemStyle: {\r\n          //     color: \"rgba(0,0,0,0)\",\r\n          //   },\r\n          //   barGap: \"-100%\",\r\n          //   barCategoryGap: \"40%\",\r\n          //   // data: dataShadow,\r\n          //   animation: false,\r\n          // },\r\n          {\r\n            name:this.title,\r\n            type: \"bar\",\r\n            barWidth: 18,\r\n             barGap: \"-100%\",\r\n            barCategoryGap: \"40%\",\r\n            animation: false,\r\n            itemStyle: {\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                 {offset: 0, color: '#20F2FF'},\r\n                 {offset: 1, color: '#003FBE'}\r\n              ]),\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  { offset: 0, color: \"#2378f7\" },\r\n                  { offset: 0.7, color: \"#2378f7\" },\r\n                  { offset: 1, color: \"#83bff6\" },\r\n                ]),\r\n              },\r\n            },\r\n            data: this.data,\r\n          },\r\n        ],\r\n      });\r\n      console.log(myCharts);\r\n    },\r\n  },\r\n  components: {},\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.column-box {\r\n  width: 100%;\r\n  height: 32.3%;\r\n}\r\n</style>\r\n"]}]}