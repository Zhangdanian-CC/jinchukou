{"remainingRequest":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Awork\\jinchukou\\src\\components\\zhiliang\\zhiliangpieone.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\Awork\\jinchukou\\src\\components\\zhiliang\\zhiliangpieone.vue","mtime":1602727288389},{"path":"D:\\Awork\\jinchukou\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Awork\\jinchukou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.zhiliangpieone {\n  width: 38.125vw;\n  height: 25vw;\n}\n",{"version":3,"sources":["zhiliangpieone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA","file":"zhiliangpieone.vue","sourceRoot":"src/components/zhiliang","sourcesContent":["<template>\n  <div class=\"zhiliangpieone\" id=\"zhiliangpieone\"></div>\n</template>\n<script>\nexport default {\n  name: \"\",\n  props: [\"chartData\"],\n  mounted() {\n    this.initPie(this.chartData);\n  },\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    initPie(data) {\n      const colorList = [\"#1d83fa\", \"#b4a8ff\", \"#5b4cff\"];\n      let e = document.body.clientWidth;\n      let chart = this.$echarts.init(document.getElementById(\"zhiliangpieone\"));\n      chart.setOption({\n        tooltip: {\n          show: true,\n          icon: \"roundRect\",\n          textStyle: {\n            color: \"rgba(255, 255, 255, 0.8)\",\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: (e / 1600) * 14,\n          },\n          formatter: \"{b}<br />{d}%\",\n        },\n        legend: {\n          show: false,\n          type: \"scroll\",\n          orient: \"vertical\",\n          top: \"42%\",\n          left: \"65%\",\n          itemGap: (e / 1600) * 20,\n          itemWidth: (e / 1600) * 10,\n          itemHeight: (e / 1600) * 15,\n          icon: \"roundRect\",\n          color: \"#59ecff\",\n          textStyle: {\n            color: \"#b3bfca\",\n            fontSize: (e / 1600) * 20,\n          },\n        },\n        color: colorList,\n        series: [\n          {\n            name: \"四大经济领域\",\n            type: \"pie\",\n            radius: (e / 1600) * 110,\n            center: [\"55%\", \"42%\"],\n            // startAngle: 60,\n            // labelLine: {\n            //   normal: {\n            //     length: 10,\n            //     length2: 50,\n            //     lineStyle: {\n            //       type: \"solid\",\n            //       width: 1,\n            //     },\n            //   },\n            // },\n            avoidLabelOverlap: true,\n            stillShowZeroSum: true,\n            minShowLabelAngle: 10,\n            label: {\n              position: \"inside\",\n              alignTo: \"labelLine\", // label两端对称布局\n              formatter: \"{b}:{d}%\",\n              fontSize:(e / 1600) * 14\n            },\n            data: this.leftData\n              ? this.leftData.map((item, index) => {\n                  return {\n                    name: this.type[index],\n                    value: item,\n                  };\n                })\n              : [\n                  { name: \"关注\", value: 20, per: \"20%\" },\n                  { name: \"不良\", value: 33, per: \"33%\" },\n                  { name: \"正常\", value: 47, per: \"47%\" },\n                ],\n          },\n        ],\n      });\n      chart.on(\"click\", (params) => {\n        this.$store.commit(\"newDialogData\", params.name);\n        this.$store.commit(\"newDialogVisible\", true);\n      });\n      //根据窗口的大小变动图表 \n      window.onresize = function () {\n        myCharts.resize();\n        //myChart1.resize();    //若有多个图表变动，可多写\n      };\n    },\n  },\n  components: {},\n  watch: {\n    chartData: function (newVal) {\n      this.initPie(this.ids, newVal);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.zhiliangpieone {\n  width: 38.125vw;\n  height: 25vw;\n}\n</style>\n"]}]}